{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nexport class AuthService {}\n_class = AuthService;\n_class.ɵfac = function AuthService_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});\n{}\nlogin(email, string, password, string);\n{\n  this.afAuth.signInWithEmailAndPassword(email, password).then(logRef => {\n    this.toastr.success('Logged in successfully');\n    this.currentUser();\n    this.router.navigate(['/']);\n  }).catch(err => {\n    this.toastr.error(err);\n  });\n}\nlogout();\n{\n  this.afAuth.signOut().then(() => {\n    this.toastr.success('User logged out successfully!');\n    this.router.navigate(['/login']);\n  });\n}\ncurrentUser();\n{\n  this.afAuth.authState.subscribe(user => {\n    localStorage.setItem('user', JSON.stringify(user));\n  });\n}","map":{"version":3,"names":["AuthService","factory","ɵfac","providedIn","login","email","string","password","afAuth","signInWithEmailAndPassword","then","logRef","toastr","success","currentUser","router","navigate","catch","err","error","logout","signOut","authState","subscribe","user","localStorage","setItem","JSON","stringify"],"sources":["/Users/mno/Desktop/ang-blog-dashboard/src/app/services/auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {AngularFireAuth} from \"@angular/fire/compat/auth\";\nimport {ToastrService} from \"ngx-toastr\";\nimport {Router} from \"@angular/router\";\nimport {user} from \"@angular/fire/auth\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  loggedIn: \n\n  constructor(private afAuth: AngularFireAuth, private toastr: ToastrService,\n              private router: Router\n              ) { }\n\n  login(email: string, password: string) {\n    this.afAuth.signInWithEmailAndPassword(email, password).then(logRef => {\n      this.toastr.success('Logged in successfully');\n      this.currentUser();\n      this.router.navigate(['/']);\n    }).catch(err => {\n      this.toastr.error(err);\n    });\n  }\n\n  logout() {\n    this.afAuth.signOut().then(() => {\n      this.toastr.success('User logged out successfully!');\n      this.router.navigate(['/login']);\n    });\n  }\n\n  currentUser() {\n    this.afAuth.authState.subscribe(user => {\n      localStorage.setItem('user', JSON.stringify(user));\n    });\n  }\n}\n"],"mappings":";;AASA,OAAM,MAAOA,WAAW;SAAXA,WAAW;;mBAAXA,MAAW;AAAA;;SAAXA,MAAW;EAAAC,OAAA,EAAXD,MAAW,CAAAE,IAAA;EAAAC,UAAA,EAFV;AAAM;AAQJ;AAEdC,KAAK,CAACC,KAAK,EAAEC,MAAM,EAAEC,QAAQ,EAAED,MAAM,CAAC;AAAC;EACrC,IAAI,CAACE,MAAM,CAACC,0BAA0B,CAACJ,KAAK,EAAEE,QAAQ,CAAC,CAACG,IAAI,CAACC,MAAM,IAAG;IACpE,IAAI,CAACC,MAAM,CAACC,OAAO,CAAC,wBAAwB,CAAC;IAC7C,IAAI,CAACC,WAAW,EAAE;IAClB,IAAI,CAACC,MAAM,CAACC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;EAC7B,CAAC,CAAC,CAACC,KAAK,CAACC,GAAG,IAAG;IACb,IAAI,CAACN,MAAM,CAACO,KAAK,CAACD,GAAG,CAAC;EACxB,CAAC,CAAC;;AAGJE,MAAM,EAAE;AAAC;EACP,IAAI,CAACZ,MAAM,CAACa,OAAO,EAAE,CAACX,IAAI,CAAC,MAAK;IAC9B,IAAI,CAACE,MAAM,CAACC,OAAO,CAAC,+BAA+B,CAAC;IACpD,IAAI,CAACE,MAAM,CAACC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;EAClC,CAAC,CAAC;;AAGJF,WAAW,EAAE;AAAC;EACZ,IAAI,CAACN,MAAM,CAACc,SAAS,CAACC,SAAS,CAACC,IAAI,IAAG;IACrCC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACJ,IAAI,CAAC,CAAC;EACpD,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}