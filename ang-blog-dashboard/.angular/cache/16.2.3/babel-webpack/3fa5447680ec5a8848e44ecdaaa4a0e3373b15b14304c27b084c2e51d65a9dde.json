{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/compat/auth\";\nimport * as i2 from \"ngx-toastr\";\nimport * as i3 from \"@angular/router\";\nexport class AuthService {\n  constructor(afAuth, toastr, router) {\n    this.afAuth = afAuth;\n    this.toastr = toastr;\n    this.router = router;\n    this.loggedIn = new Beh();\n  }\n  login(email, password) {\n    this.afAuth.signInWithEmailAndPassword(email, password).then(logRef => {\n      this.toastr.success('Logged in successfully');\n      this.currentUser();\n      this.router.navigate(['/']);\n    }).catch(err => {\n      this.toastr.error(err);\n    });\n  }\n  logout() {\n    this.afAuth.signOut().then(() => {\n      this.toastr.success('User logged out successfully!');\n      this.router.navigate(['/login']);\n    });\n  }\n  currentUser() {\n    this.afAuth.authState.subscribe(user => {\n      localStorage.setItem('user', JSON.stringify(user));\n    });\n  }\n}\n_class = AuthService;\n_class.ɵfac = function AuthService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.AngularFireAuth), i0.ɵɵinject(i2.ToastrService), i0.ɵɵinject(i3.Router));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["AuthService","constructor","afAuth","toastr","router","loggedIn","Beh","login","email","password","signInWithEmailAndPassword","then","logRef","success","currentUser","navigate","catch","err","error","logout","signOut","authState","subscribe","user","localStorage","setItem","JSON","stringify","i0","ɵɵinject","i1","AngularFireAuth","i2","ToastrService","i3","Router","factory","ɵfac","providedIn"],"sources":["/Users/mno/Desktop/ang-blog-dashboard/src/app/services/auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {AngularFireAuth} from \"@angular/fire/compat/auth\";\nimport {ToastrService} from \"ngx-toastr\";\nimport {Router} from \"@angular/router\";\nimport {user} from \"@angular/fire/auth\";\nimport {BehaviorSubject} from \"rxjs\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  loggedIn: BehaviorSubject<boolean> = new Beh\n\n  constructor(private afAuth: AngularFireAuth, private toastr: ToastrService,\n              private router: Router\n              ) { }\n\n  login(email: string, password: string) {\n    this.afAuth.signInWithEmailAndPassword(email, password).then(logRef => {\n      this.toastr.success('Logged in successfully');\n      this.currentUser();\n      this.router.navigate(['/']);\n    }).catch(err => {\n      this.toastr.error(err);\n    });\n  }\n\n  logout() {\n    this.afAuth.signOut().then(() => {\n      this.toastr.success('User logged out successfully!');\n      this.router.navigate(['/login']);\n    });\n  }\n\n  currentUser() {\n    this.afAuth.authState.subscribe(user => {\n      localStorage.setItem('user', JSON.stringify(user));\n    });\n  }\n}\n"],"mappings":";;;;;AAUA,OAAM,MAAOA,WAAW;EAItBC,YAAoBC,MAAuB,EAAUC,MAAqB,EACtDC,MAAc;IADd,KAAAF,MAAM,GAANA,MAAM;IAA2B,KAAAC,MAAM,GAANA,MAAM;IACvC,KAAAC,MAAM,GAANA,MAAM;IAH1B,KAAAC,QAAQ,GAA6B,IAAIC,GAAG,CAAH,CAAG;EAI5B;EAEhBC,KAAKA,CAACC,KAAa,EAAEC,QAAgB;IACnC,IAAI,CAACP,MAAM,CAACQ,0BAA0B,CAACF,KAAK,EAAEC,QAAQ,CAAC,CAACE,IAAI,CAACC,MAAM,IAAG;MACpE,IAAI,CAACT,MAAM,CAACU,OAAO,CAAC,wBAAwB,CAAC;MAC7C,IAAI,CAACC,WAAW,EAAE;MAClB,IAAI,CAACV,MAAM,CAACW,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;IAC7B,CAAC,CAAC,CAACC,KAAK,CAACC,GAAG,IAAG;MACb,IAAI,CAACd,MAAM,CAACe,KAAK,CAACD,GAAG,CAAC;IACxB,CAAC,CAAC;EACJ;EAEAE,MAAMA,CAAA;IACJ,IAAI,CAACjB,MAAM,CAACkB,OAAO,EAAE,CAACT,IAAI,CAAC,MAAK;MAC9B,IAAI,CAACR,MAAM,CAACU,OAAO,CAAC,+BAA+B,CAAC;MACpD,IAAI,CAACT,MAAM,CAACW,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;IAClC,CAAC,CAAC;EACJ;EAEAD,WAAWA,CAAA;IACT,IAAI,CAACZ,MAAM,CAACmB,SAAS,CAACC,SAAS,CAACC,IAAI,IAAG;MACrCC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACJ,IAAI,CAAC,CAAC;IACpD,CAAC,CAAC;EACJ;;SA7BWvB,WAAW;;mBAAXA,MAAW,EAAA4B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,eAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,aAAA,GAAAL,EAAA,CAAAC,QAAA,CAAAK,EAAA,CAAAC,MAAA;AAAA;;SAAXnC,MAAW;EAAAoC,OAAA,EAAXpC,MAAW,CAAAqC,IAAA;EAAAC,UAAA,EAFV;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}