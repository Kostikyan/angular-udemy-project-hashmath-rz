{"ast":null,"code":"var _class;\nimport { BehaviorSubject } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/compat/auth\";\nimport * as i2 from \"ngx-toastr\";\nimport * as i3 from \"@angular/router\";\nexport class AuthService {\n  constructor(afAuth, toastr, router) {\n    this.afAuth = afAuth;\n    this.toastr = toastr;\n    this.router = router;\n    this.loggedIn = new BehaviorSubject(false);\n    this.isLoggedInGuard = false;\n  }\n  login(email, password) {\n    this.afAuth.signInWithEmailAndPassword(email, password).then(logRef => {\n      this.toastr.success('Logged in successfully');\n      this.loadCurrentUser();\n      this.loggedIn.next(true);\n      this.isLoggedInGuard.this.router.navigate(['/']);\n    }).catch(err => {\n      this.toastr.error(err);\n    });\n  }\n  logout() {\n    this.afAuth.signOut().then(() => {\n      this.toastr.success('User logged out successfully!');\n      localStorage.removeItem('user');\n      this.loggedIn.next(false);\n      this.router.navigate(['/login']);\n    });\n  }\n  loadCurrentUser() {\n    this.afAuth.authState.subscribe(user => {\n      localStorage.setItem('user', JSON.stringify(user));\n    });\n  }\n  isLoggedIn() {\n    return this.loggedIn.asObservable();\n  }\n}\n_class = AuthService;\n_class.ɵfac = function AuthService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.AngularFireAuth), i0.ɵɵinject(i2.ToastrService), i0.ɵɵinject(i3.Router));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["BehaviorSubject","AuthService","constructor","afAuth","toastr","router","loggedIn","isLoggedInGuard","login","email","password","signInWithEmailAndPassword","then","logRef","success","loadCurrentUser","next","this","navigate","catch","err","error","logout","signOut","localStorage","removeItem","authState","subscribe","user","setItem","JSON","stringify","isLoggedIn","asObservable","i0","ɵɵinject","i1","AngularFireAuth","i2","ToastrService","i3","Router","factory","ɵfac","providedIn"],"sources":["/Users/mno/Desktop/ang-blog-dashboard/src/app/services/auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {AngularFireAuth} from \"@angular/fire/compat/auth\";\nimport {ToastrService} from \"ngx-toastr\";\nimport {Router} from \"@angular/router\";\nimport {BehaviorSubject} from \"rxjs\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  loggedIn: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n  isLoggedInGuard: boolean = false;\n\n  constructor(\n    private afAuth: AngularFireAuth,\n    private toastr: ToastrService,\n    private router: Router\n  ) { }\n\n  login(email: string, password: string) {\n    this.afAuth.signInWithEmailAndPassword(email, password).then(logRef => {\n      this.toastr.success('Logged in successfully');\n      this.loadCurrentUser();\n\n      this.loggedIn.next(true);\n      this.isLoggedInGuard.\n\n      this.router.navigate(['/']);\n    }).catch(err => {\n      this.toastr.error(err);\n    });\n  }\n\n  logout() {\n    this.afAuth.signOut().then(() => {\n      this.toastr.success('User logged out successfully!');\n      localStorage.removeItem('user');\n      this.loggedIn.next(false);\n      this.router.navigate(['/login']);\n    });\n  }\n\n  loadCurrentUser() {\n    this.afAuth.authState.subscribe(user => {\n      localStorage.setItem('user', JSON.stringify(user));\n    });\n  }\n\n  isLoggedIn() {\n    return this.loggedIn.asObservable();\n  }\n}\n"],"mappings":";AAIA,SAAQA,eAAe,QAAO,MAAM;;;;;AAKpC,OAAM,MAAOC,WAAW;EAKtBC,YACUC,MAAuB,EACvBC,MAAqB,EACrBC,MAAc;IAFd,KAAAF,MAAM,GAANA,MAAM;IACN,KAAAC,MAAM,GAANA,MAAM;IACN,KAAAC,MAAM,GAANA,MAAM;IANhB,KAAAC,QAAQ,GAA6B,IAAIN,eAAe,CAAU,KAAK,CAAC;IACxE,KAAAO,eAAe,GAAY,KAAK;EAM5B;EAEJC,KAAKA,CAACC,KAAa,EAAEC,QAAgB;IACnC,IAAI,CAACP,MAAM,CAACQ,0BAA0B,CAACF,KAAK,EAAEC,QAAQ,CAAC,CAACE,IAAI,CAACC,MAAM,IAAG;MACpE,IAAI,CAACT,MAAM,CAACU,OAAO,CAAC,wBAAwB,CAAC;MAC7C,IAAI,CAACC,eAAe,EAAE;MAEtB,IAAI,CAACT,QAAQ,CAACU,IAAI,CAAC,IAAI,CAAC;MACxB,IAAI,CAACT,eAAe,CAEpBU,IAAI,CAACZ,MAAM,CAACa,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;IAC7B,CAAC,CAAC,CAACC,KAAK,CAACC,GAAG,IAAG;MACb,IAAI,CAAChB,MAAM,CAACiB,KAAK,CAACD,GAAG,CAAC;IACxB,CAAC,CAAC;EACJ;EAEAE,MAAMA,CAAA;IACJ,IAAI,CAACnB,MAAM,CAACoB,OAAO,EAAE,CAACX,IAAI,CAAC,MAAK;MAC9B,IAAI,CAACR,MAAM,CAACU,OAAO,CAAC,+BAA+B,CAAC;MACpDU,YAAY,CAACC,UAAU,CAAC,MAAM,CAAC;MAC/B,IAAI,CAACnB,QAAQ,CAACU,IAAI,CAAC,KAAK,CAAC;MACzB,IAAI,CAACX,MAAM,CAACa,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;IAClC,CAAC,CAAC;EACJ;EAEAH,eAAeA,CAAA;IACb,IAAI,CAACZ,MAAM,CAACuB,SAAS,CAACC,SAAS,CAACC,IAAI,IAAG;MACrCJ,YAAY,CAACK,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACH,IAAI,CAAC,CAAC;IACpD,CAAC,CAAC;EACJ;EAEAI,UAAUA,CAAA;IACR,OAAO,IAAI,CAAC1B,QAAQ,CAAC2B,YAAY,EAAE;EACrC;;SA1CWhC,WAAW;;mBAAXA,MAAW,EAAAiC,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,eAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,aAAA,GAAAL,EAAA,CAAAC,QAAA,CAAAK,EAAA,CAAAC,MAAA;AAAA;;SAAXxC,MAAW;EAAAyC,OAAA,EAAXzC,MAAW,CAAA0C,IAAA;EAAAC,UAAA,EAFV;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}