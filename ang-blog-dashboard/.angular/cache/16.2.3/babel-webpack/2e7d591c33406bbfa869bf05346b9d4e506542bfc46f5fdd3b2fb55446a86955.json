{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./auth.service\";\nexport class AuthGuard {\n  constructor(authService) {\n    this.authService = authService;\n  }\n  canActivate(route, state) {\n    if (this.authService.isLoggedInGuard) {\n      console.log();\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n_class = AuthGuard;\n_class.ɵfac = function AuthGuard_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.AuthService));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["AuthGuard","constructor","authService","canActivate","route","state","isLoggedInGuard","console","log","i0","ɵɵinject","i1","AuthService","factory","ɵfac","providedIn"],"sources":["/Users/mno/Desktop/ang-blog-dashboard/src/app/services/auth.guard.ts"],"sourcesContent":["import {ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot, UrlTree} from '@angular/router';\nimport {Injectable} from \"@angular/core\";\nimport {Observable} from \"rxjs\";\nimport {AuthService} from \"./auth.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private authService: AuthService) {\n  }\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    if (this.authService.isLoggedInGuard) {\n      console.log()\n      return true;\n    } else {\n      return false\n    }\n  }\n}\n"],"mappings":";;;AAQA,OAAM,MAAOA,SAAS;EAEpBC,YAAoBC,WAAwB;IAAxB,KAAAA,WAAW,GAAXA,WAAW;EAC/B;EAEAC,WAAWA,CACTC,KAA6B,EAC7BC,KAA0B;IAE1B,IAAI,IAAI,CAACH,WAAW,CAACI,eAAe,EAAE;MACpCC,OAAO,CAACC,GAAG,EAAE;MACb,OAAO,IAAI;KACZ,MAAM;MACL,OAAO,KAAK;;EAEhB;;SAfWR,SAAS;;mBAATA,MAAS,EAAAS,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,WAAA;AAAA;;SAATZ,MAAS;EAAAa,OAAA,EAATb,MAAS,CAAAc,IAAA;EAAAC,UAAA,EAFR;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}